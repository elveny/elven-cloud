buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects{
    group 'tech.elven'
    version '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    ext {
        springCloudVersion = 'Dalston.SR3'
    }

    dependencies {
        testCompile("junit:junit:${junitVersion}")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        compile("org.springframework.boot:spring-boot-starter-undertow")
        compile('org.springframework.cloud:spring-cloud-starter-eureka')
        compile('org.springframework.cloud:spring-cloud-starter-config')
        compile('org.springframework.cloud:spring-cloud-starter-bus-amqp')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

subprojects{

    // 编译所有subProjects
    task buildSubProjects(dependsOn: build) << {
        println "elven cloud: building project:"+project.name
    }

    // 发布工程，依赖clearBuildedFiles和buildSubProjects
    task release(type: Copy, dependsOn: buildSubProjects) {
        println "elven cloud: copy "+project.name +"'s built files"
        from('build/libs') {
            include '*.jar'
        }
        into ('../target')
    }
}

